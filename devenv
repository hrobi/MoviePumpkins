#!/bin/bash

ENV_PROJ=$([ "$#" -gt 0 ] && echo $1 || echo env.proj)

# Download repoistory items
if ! [ -f $ENV_PROJ ]; then
    echo "ERROR: env.proj file not found!" >&2
    exit 1
fi


while read line || [ -n "$line" ]; do
    [[ ! $line =~ ^[^#].*=.* ]] && continue
    export $(echo $line | cut -d'=' -f1)=$(eval echo $(echo $line | cut -d'=' -f2))
done < $ENV_PROJ

if [ -z $CACHE ]; then
    echo "ERROR: CACHE property is mandatory" >&2
    exit 1
fi

mkdir -p $CACHE

function download_url() {
    URL=$(echo $1 | cut -d'=' -f2)
    FILE=$(echo $URL | grep -o "[^/]\+$")

    [[ -d $CACHE/$FILE ]] && return 0

    echo Downloading $URL
    curl -L $URL > $CACHE/$FILE

    if echo $FILE | grep -q "\.zip$"; then
        mkdir $CACHE/$FILE.dir
        unzip -d $CACHE/$FILE.dir $CACHE/$FILE 1&> /dev/null
        rm $CACHE/$FILE
        mv $CACHE/$FILE.dir $CACHE/$FILE
    fi
}

function add_to_path() {
    BIN_PATH=$(echo $1 | cut -d'=' -f2)
    if echo $PATH | grep -qvF "$(eval echo $BIN_PATH):"; then
        export PATH=$(eval echo $BIN_PATH):$PATH
    fi
}

while read line || [ -n "$line" ]; do

    [[ $line =~ "^#" ]] && continue

    case $(echo $line | grep -o "_[A-Z0-9]\+=") in
        "_URL=")
            download_url $line ;;
        "_BIN=")
            add_to_path $line ;;
        "_DIR=")
            mkdir -p $(eval echo $line | cut -d'=' -f2);;
    esac

done < $ENV_PROJ